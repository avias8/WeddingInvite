datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Invitee {
  id                   Int      @id @default(autoincrement())
  name                 String
  email                String   @unique
  isAttending          Boolean?
  guests               Int      @default(1)
  createdAt            DateTime @default(now())
  token                String   @unique @default(uuid())
  maxInvites           Int
  respondedAt          DateTime?
  dietaryRestrictions  String?
  accessibilityInfo    String?
  comments             String?
  songRequests         String?
  emailSentAt          DateTime?  
  emailOpenedAt        DateTime?  
  guestsList           Guest[]  // Relation to individual guests
}

model Guest {
  id         Int       @id @default(autoincrement())
  name       String
  inviteeId  Int       @map("invitee_id")
  invitee    Invitee   @relation(fields: [inviteeId], references: [id])
  dietaryRestrictions String?
  accessibilityInfo String?
  isAttending Boolean?
  
  tableId    Int?      @map("table_id")  
  table      Table?    @relation(fields: [tableId], references: [id])

  seatingAssignment SeatingAssignment? @relation("GuestToSeatingAssignment") // ✅ Removed `references`
}

model Table {
  id          Int       @id @default(autoincrement())
  name        String
  capacity    Int
  guests      Guest[]
  assignments SeatingAssignment[]
}

model SeatingAssignment {
  id        Int    @id @default(autoincrement())
  guestId   Int    @unique @map("guest_id") 
  guest     Guest  @relation("GuestToSeatingAssignment", fields: [guestId], references: [id]) // ✅ `references` only on this side
  tableId   Int    @map("table_id")
  table     Table  @relation(fields: [tableId], references: [id])
}